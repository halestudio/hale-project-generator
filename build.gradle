plugins {
  id 'java-library'
  id 'maven-publish'
  id 'groovy'
  id 'org.standardout.eclipseconfig' version '1.1.0'
  id 'to.wetransform.semantic-release-version' version '2.1.3'
}

repositories {
  maven { // wetransform (HALE and Eclipse dependencies)
    url 'https://artifactory.wetransform.to/artifactory/local'
  }

  // these need to before MavenCentral for retrieving JAI
  maven { // Geotools
    url 'https://repo.osgeo.org/repository/release/'
  }

  maven {
    url 'https://artifactory.wetransform.to/artifactory/ext-release-local'
  }

  mavenCentral()
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

group = 'to.wetransform'

project.ext {
  haleVersion = '6.2.4'
}

dependencies {
  // BOM
  implementation(platform("eu.esdihumboldt.hale:bom:$haleVersion"))

  implementation 'org.slf4j:slf4j-api'
  implementation 'commons-io:commons-io'

  // core
  implementation 'eu.esdihumboldt.hale:org.eclipse.equinox.nonosgi.registry'
  implementation "eu.esdihumboldt.hale:eu.esdihumboldt.hale.common.core"

  // schema
  implementation "eu.esdihumboldt.hale:eu.esdihumboldt.hale.common.schema"

  // alignment
  implementation "eu.esdihumboldt.hale:eu.esdihumboldt.hale.common.align"

  // Groovy
  implementation 'org.codehaus.groovy:groovy-xml'

  // testing
  testImplementation 'junit:junit:4.13.2'

  // logging
  testRuntimeOnly 'ch.qos.logback:logback-core'
  testRuntimeOnly 'ch.qos.logback:logback-classic'
}

/*
 * Packaging and publishing
 */

// package groovydoc into a jar file
task packageJavadoc(type: Jar, dependsOn: 'groovydoc') {
  from groovydoc.destinationDir
  archiveClassifier = 'javadoc'
}

// package source into a jar file
task packageSources(type: Jar) {
  from sourceSets.main.allSource
  archiveClassifier = 'sources'
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact packageSources
      artifact packageJavadoc
    }
  }

  repositories {
    maven {
      url = project.version.endsWith('-SNAPSHOT') ?
        'https://artifactory.wetransform.to/artifactory/libs-snapshot-local' :
        'https://artifactory.wetransform.to/artifactory/libs-release-local'
      credentials {
        username project.hasProperty('wetfArtifactoryUser') ? wetfArtifactoryUser : ''
        password project.hasProperty('wetfArtifactoryPassword') ? wetfArtifactoryPassword : ''
      }
    }
  }
}

/*
 * Some general project configuration
 */

configurations.all {
  // ensure SNAPSHOTs are updated every time if needed
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

// Gradle wrapper
tasks.wrapper {
  distributionType = Wrapper.DistributionType.ALL
  gradleVersion = '9.1.0'
}
